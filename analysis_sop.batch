#make.contigs(file=stability.files, processors=8)
screen.seqs(fasta=stability.trim.contigs.fasta, group=stability.contigs.groups, maxambig=0, maxlength=275,processors=4)
unique.seqs()
count.seqs(name=current, group=current)
align.seqs(fasta=current, reference=silva.v4.fasta)
screen.seqs(fasta=current, count=current, start=1968, end=11550, maxhomop=8)
filter.seqs(fasta=current, vertical=T, trump=.)
unique.seqs(fasta=current, count=current)
pre.cluster(fasta=current, count=current, diffs=2)
chimera.uchime(fasta=current, count=current, dereplicate=t)
remove.seqs(fasta=current, accnos=current)
classify.seqs(fasta=current, count=current, reference=trainset9_032012.pds.fasta, taxonomy=trainset9_032012.pds.tax, cutoff=80)
remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
remove.groups(count=current, fasta=current, taxonomy=current, groups=EMPTY2-EMPTY3-EMPTY4-EMPTY5-EMPTY6-PCRWATERA-PCRWATERB-PCRWATERC-PCRWATERD-RC-WATERATD101515-WATERBTD101515-WATERB02172016-WATERA-RC4-TDWATERD060216-RC5-WATERC081616-BLANKDH11-BLANKDH12-PCRWATERC-PCRWATERD-RC061917-RC062317-RC71017-RC082317-RC082517-RC083017-RC0830172-RC092217-R112216-GD1-GD2-GD3-GD4-ZYMOMOCKA-ZYMOMOCKB-ZYMOMOCKC-ZYMOMOCKD-SP434-MOCK6-SP434231-SP434232-MOCK231-MOCK232-MOCKATD101515-MOCKBTD101515-SP434241-SP434242-MOCK241-MOCK242-MOCKA02172016-MOCKB02172016-SP434254-MOCK254-TDMOCKD060216-MOCKC081616-ZYMOMOCKC-ZYMOMOCKD)
cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=4, cutoff=0.15,processors=1)
# Get OTU counts, RAs, and alpha measures
make.shared(list=current, count=current, label=0.03)
summary.shared(calc=braycurtis-sharedsobs-sharedchao-sharedace)
classify.otu(list=current, count=current, taxonomy=current, label=0.03)
summary.single(calc=sobs-chao-ace-jack-bootstrap-simpsoneven-shannoneven-heip-smithwilson-bergerparker-shannon-npshannon-simpson-invsimpson-coverage-qstat-boneh-efron-shen-solow-logseries-geometric-bstick,subsample=T)
get.communitytype(shared=current)
# genus counts
make.shared(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table, label=1)
system(mv stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.shared genus.shared)
summary.shared(shared=genus.shared,calc=braycurtis-sharedsobs-sharedchao-sharedace)
summary.single(calc=sobs-chao-ace-jack-bootstrap-simpsoneven-shannoneven-heip-smithwilson-bergerparker-shannon-npshannon-simpson-invsimpson-coverage-qstat-boneh-efron-shen-solow-logseries-geometric-bstick,subsample=T)
get.communitytype(shared=current)
# family counts
make.shared(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table, label=2)
system(mv stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.shared family.shared)
summary.shared(shared=family.shared,calc=braycurtis-sharedsobs-sharedchao-sharedace)
summary.single(calc=sobs-chao-ace-jack-bootstrap-simpsoneven-shannoneven-heip-smithwilson-bergerparker-shannon-npshannon-simpson-invsimpson-coverage-qstat-boneh-efron-shen-solow-logseries-geometric-bstick,subsample=T)
get.communitytype(shared=current)
# order counts
make.shared(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table, label=3)
system(mv stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.shared order.shared)
summary.shared(shared=order.shared,calc=braycurtis-sharedsobs-sharedchao-sharedace)
summary.single(calc=sobs-chao-ace-jack-bootstrap-simpsoneven-shannoneven-heip-smithwilson-bergerparker-shannon-npshannon-simpson-invsimpson-coverage-qstat-boneh-efron-shen-solow-logseries-geometric-bstick,subsample=T)
get.communitytype(shared=current)

# Get OTU counts, RAs, and alpha measures
make.shared(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table, label=0.03)
system(mv stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.shared otu.shared)
classify.otu(list=current, count=current, taxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy, label=0.03)
phylotype(taxonomy=current)
get.relabund(shared=current)
summary.single(shared=otu.shared,calc=sobs-chao-ace-jack-bootstrap-simpsoneven-shannoneven-heip-smithwilson-bergerparker-shannon-npshannon-simpson-invsimpson-coverage-qstat-boneh-efron-shen-solow-logseries-geometric-bstick,subsample=T)
summary.shared(calc=braycurtis-sharedsobs-sharedchao-sharedace)
get.communitytype(shared=current)
# genus counts
make.shared(list=current, count=current, label=1)
system(mv stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.shared genus.shared)
classify.otu(list=current, count=current, taxonomy=current, label=1)
phylotype(taxonomy=current)
get.relabund(shared=current)
summary.single(shared=genus.shared,calc=sobs-chao-ace-jack-bootstrap-simpsoneven-shannoneven-heip-smithwilson-bergerparker-shannon-npshannon-simpson-invsimpson-coverage-qstat-boneh-efron-shen-solow-logseries-geometric-bstick,subsample=T)
summary.shared(shared=genus.shared,calc=braycurtis-sharedsobs-sharedchao-sharedace)
get.communitytype(shared=current)
# family counts
make.shared(list=current, count=current, label=2)
system(mv stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.shared family.shared)
classify.otu(list=current, count=current, taxonomy=current, label=2)
phylotype(taxonomy=current)
get.relabund(shared=current)
summary.single(shared=family.shared,calc=sobs-chao-ace-jack-bootstrap-simpsoneven-shannoneven-heip-smithwilson-bergerparker-shannon-npshannon-simpson-invsimpson-coverage-qstat-boneh-efron-shen-solow-logseries-geometric-bstick,subsample=T)
summary.shared(shared=family.shared,calc=braycurtis-sharedsobs-sharedchao-sharedace)
get.communitytype(shared=current)
# order counts
make.shared(list=current, count=current, label=3)
system(mv stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.shared order.shared)
classify.otu(list=current, count=current, taxonomy=current, label=3)
phylotype(taxonomy=current)
summary.single(shared=order.shared,calc=sobs-chao-ace-jack-bootstrap-simpsoneven-shannoneven-heip-smithwilson-bergerparker-shannon-npshannon-simpson-invsimpson-coverage-qstat-boneh-efron-shen-solow-logseries-geometric-bstick,subsample=T)
summary.shared(shared=order.shared,calc=braycurtis-sharedsobs-sharedchao-sharedace)
get.communitytype(shared=current)