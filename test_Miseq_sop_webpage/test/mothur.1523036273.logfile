Linux version

Using ReadLine

Running 64Bit Version

mothur v.1.39.5
Last updated: 3/20/2017

by
Patrick D. Schloss

Department of Microbiology & Immunology
University of Michigan
http://www.mothur.org

When using, please cite:
Schloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.

Distributed under the GNU General Public License

Type 'help()' for information on the commands that are available

For questions and analysis support, please visit our forum at https://www.mothur.org/forum

Type 'quit()' to exit program
Batch Mode


mothur > make.contigs(file=stability.files, processors=8)

Using 8 processors.

>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D0_S188_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D0_S188_L001_R2_001.fastq (files 1 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 7793 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D141_S207_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D141_S207_L001_R2_001.fastq (files 2 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 5958 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D142_S208_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D142_S208_L001_R2_001.fastq (files 3 of 20)	<<<<<
Making contigs...
Done.

It took 1 secs to assemble 3183 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D143_S209_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D143_S209_L001_R2_001.fastq (files 4 of 20)	<<<<<
Making contigs...
Done.

It took 1 secs to assemble 3178 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D144_S210_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D144_S210_L001_R2_001.fastq (files 5 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 4827 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D145_S211_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D145_S211_L001_R2_001.fastq (files 6 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 7377 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D146_S212_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D146_S212_L001_R2_001.fastq (files 7 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 5021 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D147_S213_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D147_S213_L001_R2_001.fastq (files 8 of 20)	<<<<<
Making contigs...
Done.

It took 5 secs to assemble 17070 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D148_S214_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D148_S214_L001_R2_001.fastq (files 9 of 20)	<<<<<
Making contigs...
Done.

It took 3 secs to assemble 12405 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D149_S215_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D149_S215_L001_R2_001.fastq (files 10 of 20)	<<<<<
Making contigs...
Done.

It took 4 secs to assemble 13083 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D150_S216_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D150_S216_L001_R2_001.fastq (files 11 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 5509 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D1_S189_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D1_S189_L001_R2_001.fastq (files 12 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 5869 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D2_S190_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D2_S190_L001_R2_001.fastq (files 13 of 20)	<<<<<
Making contigs...
Done.

It took 6 secs to assemble 19620 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D3_S191_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D3_S191_L001_R2_001.fastq (files 14 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 6758 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D5_S193_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D5_S193_L001_R2_001.fastq (files 15 of 20)	<<<<<
Making contigs...
Done.

It took 1 secs to assemble 4448 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D6_S194_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D6_S194_L001_R2_001.fastq (files 16 of 20)	<<<<<
Making contigs...
Done.

It took 3 secs to assemble 7989 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D7_S195_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D7_S195_L001_R2_001.fastq (files 17 of 20)	<<<<<
Making contigs...
Done.

It took 1 secs to assemble 5129 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D8_S196_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D8_S196_L001_R2_001.fastq (files 18 of 20)	<<<<<
Making contigs...
Done.

It took 2 secs to assemble 5294 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D9_S197_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/F3D9_S197_L001_R2_001.fastq (files 19 of 20)	<<<<<
Making contigs...
Done.

It took 3 secs to assemble 7070 reads.


>>>>>	Processing file pair /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/Mock_S280_L001_R1_001.fastq - /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/Mock_S280_L001_R2_001.fastq (files 20 of 20)	<<<<<
Making contigs...
Done.

It took 1 secs to assemble 4779 reads.

It took 47 secs to process 152360 sequences.

Group count: 
F3D0	7793
F3D1	5869
F3D141	5958
F3D142	3183
F3D143	3178
F3D144	4827
F3D145	7377
F3D146	5021
F3D147	17070
F3D148	12405
F3D149	13083
F3D150	5509
F3D2	19620
F3D3	6758
F3D5	4448
F3D6	7989
F3D7	5129
F3D8	5294
F3D9	7070
Mock	4779

Total of all groups is 152360

Output File Names: 
stability.trim.contigs.fasta
stability.trim.contigs.qual
stability.contigs.report
stability.scrap.contigs.fasta
stability.scrap.contigs.qual
stability.contigs.groups

[WARNING]: your sequence names contained ':'.  I changed them to '_' to avoid problems in your downstream analysis.

mothur > summary.seqs(fasta=stability.trim.contigs.fasta)

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	248	248	0	3	1
2.5%-tile:	1	252	252	0	3	3810
25%-tile:	1	252	252	0	4	38091
Median: 	1	252	252	0	4	76181
75%-tile:	1	253	253	0	5	114271
97.5%-tile:	1	253	253	6	6	148552
Maximum:	1	502	502	249	243	152360
Mean:	1	252.811	252.811	0.70063	4.44854
# of Seqs:	152360

Output File Names: 
stability.trim.contigs.summary

It took 1 secs to summarize 152360 sequences.

mothur > screen.seqs(fasta=stability.trim.contigs.fasta, group=stability.contigs.groups, maxambig=0, maxlength=275)

Using 8 processors.

Output File Names: 
stability.trim.contigs.good.fasta
stability.trim.contigs.bad.accnos
stability.contigs.good.groups


It took 1 secs to screen 152360 sequences.

mothur > screen.seqs(fasta=stability.trim.contigs.fasta, group=stability.contigs.groups, summary=stability.trim.contigs.summary, maxambig=0, maxlength=275)

Using 8 processors.

Output File Names: 
stability.trim.contigs.good.summary
stability.trim.contigs.good.fasta
stability.trim.contigs.bad.accnos
stability.contigs.good.groups


It took 2 secs to screen 152360 sequences.

mothur > get.current()

Current RAM usage: 0.0182724 Gigabytes. Total Ram: 7.91433 Gigabytes.

Current files saved by mothur:
fasta=stability.trim.contigs.good.fasta
group=stability.contigs.good.groups
qfile=stability.trim.contigs.qual
contigsreport=stability.contigs.report
processors=8
summary=stability.trim.contigs.summary

Current default directory saved by mothur: /mnt/d/software/mothur/mothur/

Current working directory: /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/

Output File Names: 
current_files.summary


mothur > summary.seqs(fasta=stability.trim.contigs.good.fasta)

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	250	250	0	3	1
2.5%-tile:	1	252	252	0	3	3222
25%-tile:	1	252	252	0	4	32219
Median: 	1	252	252	0	4	64437
75%-tile:	1	253	253	0	5	96655
97.5%-tile:	1	253	253	0	6	125651
Maximum:	1	270	270	0	12	128872
Mean:	1	252.462	252.462	0	4.36693
# of Seqs:	128872

Output File Names: 
stability.trim.contigs.good.summary

It took 1 secs to summarize 128872 sequences.

mothur > summary.seqs(fasta=current)
Using stability.trim.contigs.good.fasta as input file for the fasta parameter.

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	250	250	0	3	1
2.5%-tile:	1	252	252	0	3	3222
25%-tile:	1	252	252	0	4	32219
Median: 	1	252	252	0	4	64437
75%-tile:	1	253	253	0	5	96655
97.5%-tile:	1	253	253	0	6	125651
Maximum:	1	270	270	0	12	128872
Mean:	1	252.462	252.462	0	4.36693
# of Seqs:	128872

Output File Names: 
stability.trim.contigs.good.summary

It took 0 secs to summarize 128872 sequences.

mothur > summary.seqs()
Using stability.trim.contigs.good.fasta as input file for the fasta parameter.

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	250	250	0	3	1
2.5%-tile:	1	252	252	0	3	3222
25%-tile:	1	252	252	0	4	32219
Median: 	1	252	252	0	4	64437
75%-tile:	1	253	253	0	5	96655
97.5%-tile:	1	253	253	0	6	125651
Maximum:	1	270	270	0	12	128872
Mean:	1	252.462	252.462	0	4.36693
# of Seqs:	128872

Output File Names: 
stability.trim.contigs.good.summary

It took 1 secs to summarize 128872 sequences.

mothur > unique.seqs(fasta=stability.trim.contigs.good.fasta)
128872	16426

Output File Names: 
stability.trim.contigs.good.names
stability.trim.contigs.good.unique.fasta


mothur > count.seqs(name=stability.trim.contigs.good.names, group=stability.contigs.good.groups)

Using 8 processors.
It took 0 secs to create a table for 128872 sequences.


Total number of sequences: 128872

Output File Names: 
stability.trim.contigs.good.count_table


mothur > summary.seqs(count=stability.trim.contigs.good.count_table)
Using stability.trim.contigs.good.unique.fasta as input file for the fasta parameter.

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	250	250	0	3	1
2.5%-tile:	1	252	252	0	3	3222
25%-tile:	1	252	252	0	4	32219
Median: 	1	252	252	0	4	64437
75%-tile:	1	253	253	0	5	96655
97.5%-tile:	1	253	253	0	6	125651
Maximum:	1	270	270	0	12	128872
Mean:	1	252.462	252.462	0	4.36693
# of unique seqs:	16426
total # of seqs:	128872

Output File Names: 
stability.trim.contigs.good.unique.summary

It took 1 secs to summarize 128872 sequences.

mothur > pcr.seqs(fasta=silva.bacteria.fasta, start=11894, end=25319, keepdots=F, processors=8)

Using 8 processors.

Output File Names: 
silva.bacteria.pcr.fasta


It took 6 secs to screen 14956 sequences.

mothur > rename.file(input=silva.bacteria.pcr.fasta, new=silva.v4.fasta)

Current files saved by mothur:
fasta=silva.bacteria.pcr.fasta
group=stability.contigs.good.groups
name=stability.trim.contigs.good.names
qfile=stability.trim.contigs.qual
contigsreport=stability.contigs.report
count=stability.trim.contigs.good.count_table
processors=8
summary=stability.trim.contigs.good.unique.summary

mothur > summary.seqs(fasta=silva.v4.fasta)

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	13424	270	0	3	1
2.5%-tile:	1	13425	292	0	4	374
25%-tile:	1	13425	293	0	4	3740
Median: 	1	13425	293	0	4	7479
75%-tile:	1	13425	293	0	5	11218
97.5%-tile:	1	13425	294	1	6	14583
Maximum:	3	13425	351	5	9	14956
Mean:	1.00074	13425	292.977	0.0573014	4.57014
# of Seqs:	14956

Output File Names: 
silva.v4.summary

It took 2 secs to summarize 14956 sequences.

mothur > align.seqs(fasta=stability.trim.contigs.good.unique.fasta, reference=silva.v4.fasta)

Using 8 processors.

Reading in the silva.v4.fasta template sequences...	DONE.
It took 5 to read  14956 sequences.
Aligning sequences from stability.trim.contigs.good.unique.fasta ...
It took 11 secs to align 16426 sequences.


Output File Names: 
stability.trim.contigs.good.unique.align
stability.trim.contigs.good.unique.align.report


mothur > summary.seqs(fasta=stability.trim.contigs.good.unique.align, count=stability.trim.contigs.good.count_table)

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1250	10693	250	0	3	1
2.5%-tile:	1968	11550	252	0	3	3222
25%-tile:	1968	11550	252	0	4	32219
Median: 	1968	11550	252	0	4	64437
75%-tile:	1968	11550	253	0	5	96655
97.5%-tile:	1968	11550	253	0	6	125651
Maximum:	1982	13400	270	0	12	128872
Mean:	1967.99	11550	252.462	0	4.36693
# of unique seqs:	16426
total # of seqs:	128872

Output File Names: 
stability.trim.contigs.good.unique.summary

It took 2 secs to summarize 128872 sequences.

mothur > screen.seqs(fasta=stability.trim.contigs.good.unique.align, count=stability.trim.contigs.good.count_table, summary=stability.trim.contigs.good.unique.summary, start=1968, end=11550, maxhomop=8)

Using 8 processors.

Output File Names: 
stability.trim.contigs.good.unique.good.summary
stability.trim.contigs.good.unique.good.align
stability.trim.contigs.good.unique.bad.accnos
stability.trim.contigs.good.good.count_table


It took 5 secs to screen 16426 sequences.

mothur > summary.seqs(fasta=current, count=current)
Using stability.trim.contigs.good.good.count_table as input file for the count parameter.
Using stability.trim.contigs.good.unique.good.align as input file for the fasta parameter.

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1965	11550	250	0	3	1
2.5%-tile:	1968	11550	252	0	3	3217
25%-tile:	1968	11550	252	0	4	32164
Median: 	1968	11550	252	0	4	64328
75%-tile:	1968	11550	253	0	5	96492
97.5%-tile:	1968	11550	253	0	6	125439
Maximum:	1968	13400	270	0	8	128655
Mean:	1968	11550	252.463	0	4.36666
# of unique seqs:	16298
total # of seqs:	128655

Output File Names: 
stability.trim.contigs.good.unique.good.summary

It took 1 secs to summarize 128655 sequences.

mothur > filter.seqs(fasta=stability.trim.contigs.good.unique.good.align, vertical=T, trump=.)

Using 8 processors.
Creating Filter... 


Running Filter... 



Length of filtered alignment: 376
Number of columns removed: 13049
Length of the original alignment: 13425
Number of sequences used to construct filter: 16298

Output File Names: 
stability.filter
stability.trim.contigs.good.unique.good.filter.fasta


mothur > unique.seqs(fasta=stability.trim.contigs.good.unique.good.filter.fasta, count=stability.trim.contigs.good.good.count_table)
16298	16295

Output File Names: 
stability.trim.contigs.good.unique.good.filter.count_table
stability.trim.contigs.good.unique.good.filter.unique.fasta


mothur > pre.cluster(fasta=stability.trim.contigs.good.unique.good.filter.unique.fasta, count=stability.trim.contigs.good.unique.good.filter.count_table, diffs=2)

Using 8 processors.

Processing group F3D141:

mothur > pre.cluster(fasta=stability.trim.contigs.good.unique.good.filter.unique.fasta, count=stability.trim.contigs.good.unique.good.filter.count_table, diffs=2)

Using 8 processors.

Processing group F3D143:

mothur > pre.cluster(fasta=stability.trim.contigs.good.unique.good.filter.unique.fasta, count=stability.trim.contigs.good.unique.good.filter.count_table, diffs=2)

Using 8 processors.

Processing group F3D145:
734	342	392
Total number of sequences before pre.cluster was 734.
pre.cluster removed 392 sequences.

1115	445	670
Total number of sequences before pre.cluster was 1115.
pre.cluster removed 670 sequences.

It took 0 secs to cluster 734 sequences.

Processing group F3D144:

mothur > pre.cluster(fasta=stability.trim.contigs.good.unique.good.filter.unique.fasta, count=stability.trim.contigs.good.unique.good.filter.count_table, diffs=2)

Using 8 processors.

Processing group F3D147:
It took 0 secs to cluster 1115 sequences.

Processing group F3D142:

mothur > pre.cluster(fasta=stability.trim.contigs.good.unique.good.filter.unique.fasta, count=stability.trim.contigs.good.unique.good.filter.count_table, diffs=2)

Using 8 processors.

Processing group F3D150:

mothur > pre.cluster(fasta=stability.trim.contigs.good.unique.good.filter.unique.fasta, count=stability.trim.contigs.good.unique.good.filter.count_table, diffs=2)

Using 8 processors.

Processing group F3D5:

mothur > pre.cluster(fasta=stability.trim.contigs.good.unique.good.filter.unique.fasta, count=stability.trim.contigs.good.unique.good.filter.count_table, diffs=2)

Using 8 processors.

Processing group F3D0:
1350	513	837
Total number of sequences before pre.cluster was 1350.
pre.cluster removed 837 sequences.

723	324	399
Total number of sequences before pre.cluster was 723.
pre.cluster removed 399 sequences.

951	419	532
Total number of sequences before pre.cluster was 951.
pre.cluster removed 532 sequences.


mothur > pre.cluster(fasta=stability.trim.contigs.good.unique.good.filter.unique.fasta, count=stability.trim.contigs.good.unique.good.filter.count_table, diffs=2)

Using 8 processors.

Processing group F3D8:
It took 0 secs to cluster 723 sequences.
It took 0 secs to cluster 951 sequences.
It took 0 secs to cluster 1350 sequences.

Processing group F3D146:
907	405	502
Total number of sequences before pre.cluster was 907.
pre.cluster removed 502 sequences.

1245	531	714
Total number of sequences before pre.cluster was 1245.
pre.cluster removed 714 sequences.

1004	417	587
Total number of sequences before pre.cluster was 1004.
pre.cluster removed 587 sequences.

It took 1 secs to cluster 907 sequences.

Processing group F3D6:
It took 1 secs to cluster 1245 sequences.

Processing group F3D2:
1523	564	959
Total number of sequences before pre.cluster was 1523.
pre.cluster removed 959 sequences.

It took 1 secs to cluster 1004 sequences.

Processing group F3D9:
1125	519	606
Total number of sequences before pre.cluster was 1125.
pre.cluster removed 606 sequences.

It took 1 secs to cluster 1523 sequences.

Processing group F3D1:
It took 1 secs to cluster 1125 sequences.
1377	495	882
Total number of sequences before pre.cluster was 1377.
pre.cluster removed 882 sequences.

It took 0 secs to cluster 1377 sequences.

Processing group F3D7:
1295	519	776
Total number of sequences before pre.cluster was 1295.
pre.cluster removed 776 sequences.

870	329	541
Total number of sequences before pre.cluster was 870.
pre.cluster removed 541 sequences.

1195	474	721
Total number of sequences before pre.cluster was 1195.
pre.cluster removed 721 sequences.

2840	910	1930
Total number of sequences before pre.cluster was 2840.
pre.cluster removed 1930 sequences.

It took 0 secs to cluster 870 sequences.
It took 0 secs to cluster 1295 sequences.

Processing group Mock:
531	121	410
Total number of sequences before pre.cluster was 531.
pre.cluster removed 410 sequences.

It took 0 secs to cluster 1195 sequences.
It took 0 secs to cluster 531 sequences.
2747	839	1908
Total number of sequences before pre.cluster was 2747.
pre.cluster removed 1908 sequences.

It took 0 secs to cluster 2747 sequences.

Processing group F3D3:
1078	404	674
Total number of sequences before pre.cluster was 1078.
pre.cluster removed 674 sequences.

It took 0 secs to cluster 1078 sequences.
It took 1 secs to cluster 2840 sequences.

Processing group F3D148:
2154	720	1434
Total number of sequences before pre.cluster was 2154.
pre.cluster removed 1434 sequences.

It took 0 secs to cluster 2154 sequences.

Processing group F3D149:
2266	821	1445
Total number of sequences before pre.cluster was 2266.
pre.cluster removed 1445 sequences.

It took 1 secs to cluster 2266 sequences.
It took 3 secs to run pre.cluster.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.fasta
stability.trim.contigs.good.unique.good.filter.unique.precluster.count_table
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D0.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D1.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D141.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D142.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D143.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D144.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D145.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D146.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D147.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D148.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D149.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D150.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D2.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D3.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D5.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D6.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D7.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D8.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.F3D9.map
stability.trim.contigs.good.unique.good.filter.unique.precluster.Mock.map


mothur > chimera.vsearch(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.fasta, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.count_table, dereplicate=t)

Using 8 processors.
/mnt/d/software/mothur/mothurvsearch file does not exist. Checking path... 
Found vsearch in your path, using /usr/local/bin/vsearch
Checking sequences from stability.trim.contigs.good.unique.good.filter.unique.precluster.fasta ...

It took 1 secs to check 564 sequences from group F3D0.

It took 0 secs to check 474 sequences from group F3D1.

It took 1 secs to check 445 sequences from group F3D141.

It took 1 secs to check 324 sequences from group F3D142.

It took 1 secs to check 342 sequences from group F3D143.

It took 1 secs to check 419 sequences from group F3D144.

It took 0 secs to check 513 sequences from group F3D145.

It took 1 secs to check 519 sequences from group F3D146.

It took 2 secs to check 910 sequences from group F3D147.

It took 1 secs to check 720 sequences from group F3D148.

It took 0 secs to check 821 sequences from group F3D149.

It took 2 secs to check 531 sequences from group F3D150.

It took 3 secs to check 839 sequences from group F3D2.

It took 0 secs to check 404 sequences from group F3D3.

It took 1 secs to check 405 sequences from group F3D5.

It took 0 secs to check 495 sequences from group F3D6.

It took 1 secs to check 329 sequences from group F3D7.

It took 0 secs to check 417 sequences from group F3D8.

It took 1 secs to check 519 sequences from group F3D9.

It took 0 secs to check 121 sequences from group Mock.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table
stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.chimeras
stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.accnos


mothur > remove.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.fasta, accnos=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.accnos)
[WARNING]: This command can take a namefile and you did not provide one. The current namefile is stability.trim.contigs.good.names which seems to match stability.trim.contigs.good.unique.good.filter.unique.precluster.fasta.
Removed 3449 sequences from your fasta file.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta


mothur > summary.seqs(fasta=current, count=current)
Using stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table as input file for the count parameter.
Using stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta as input file for the fasta parameter.

Using 8 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	376	249	0	3	1
2.5%-tile:	1	376	252	0	3	2954
25%-tile:	1	376	252	0	4	29539
Median: 	1	376	252	0	4	59077
75%-tile:	1	376	253	0	5	88615
97.5%-tile:	1	376	253	0	6	115200
Maximum:	1	376	256	0	8	118153
Mean:	1	376	252.464	0	4.37545
# of unique seqs:	2283
total # of seqs:	118153

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.summary

It took 0 secs to summarize 118153 sequences.

mothur > classify.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table, reference=trainset9_032012.pds.fasta, taxonomy=trainset9_032012.pds.tax, cutoff=80)

Using 8 processors.
Reading template taxonomy...     DONE.
Reading template probabilities...     DONE.
It took 6 seconds get probabilities. 
Classifying sequences from stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta ...

It took 8 secs to classify 2283 sequences.


It took 1 secs to create the summary file for 2283 sequences.


Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.taxonomy
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.tax.summary


mothur > remove.lineage(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table, taxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.taxonomy, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)

[NOTE]: The count file should contain only unique names, so mothur assumes your fasta, list and taxonomy files also contain only uniques.


Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta
stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table


mothur > summary.tax(taxonomy=current, count=current)
Using stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table as input file for the count parameter.
Using stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy as input file for the taxonomy parameter.

It took 0 secs to create the summary file for 117991 sequences.


Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.tax.summary


mothur > get.groups(count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table, fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, groups=Mock)

[NOTE]: The count file should contain only unique names, so mothur assumes your fasta, list and taxonomy files also contain only uniques.

Selected 58 sequences from your fasta file.
Selected 4046 sequences from your count file.

Output File names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta
stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table


mothur > seq.error(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, reference=HMP_MOCK.v35.fasta, aligned=F)

Using 8 processors.
[WARNING]: This command can take a namefile and you did not provide one. The current namefile is stability.trim.contigs.good.names which seems to match stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.
It took 0 to read 32 sequences.
Appending files from process 9338
Appending files from process 9339
Appending files from process 9340
Appending files from process 9341
Appending files from process 9342
Appending files from process 9343
Appending files from process 9344

Multiply error rate by 100 to obtain the percent sequencing errors.
Overall error rate:	6.5108e-05
Errors	Sequences
0	3998
1	3
2	0
3	2
4	1
5	0
6	0
7	0
8	0
9	0
10	0
11	2
12	0
13	0
14	0
15	0
16	0
17	0
18	0
19	0
20	0
21	0
22	0
23	0
24	0
25	0
26	0
27	0
28	0
29	0
30	0
31	1
It took 2 secs to check 58 sequences.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.summary
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.seq
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.chimera
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.seq.forward
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.seq.reverse
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.count
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.matrix
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.ref


mothur > dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, cutoff=0.03)

Using 8 processors.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist

It took 0 seconds to calculate the distances for 58 sequences.

mothur > cluster(column=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table)

Using 8 processors.

You did not set a cutoff, using 0.03.

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist


iter	time	label	num_otus	cutoff	tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0.03	58	0.03	0	1607	0	46	0	1	0	0.972172	0	0.972172	0	0	
1	0	0.03	36	0.03	40	1604	3	6	0.869565	0.998133	0.930233	0.996273	0.0697674	0.994555	0.89662	0.898876	
2	0	0.03	34	0.03	44	1601	6	2	0.956522	0.996266	0.88	0.998752	0.12	0.99516	0.915022	0.916667	
3	0	0.03	34	0.03	44	1601	6	2	0.956522	0.996266	0.88	0.998752	0.12	0.99516	0.915022	0.916667	


It took 0 seconds to cluster

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.steps
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.sensspec


mothur > make.shared(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, label=0.03)
0.03

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.shared


mothur > rarefaction.single(shared=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.shared)

Using 8 processors.
0.03

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.groups.rarefaction


mothur > remove.groups(count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table, fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, taxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, groups=Mock)

[NOTE]: The count file should contain only unique names, so mothur assumes your fasta, list and taxonomy files also contain only uniques.

Removed 35 sequences from your fasta file.
Removed 4046 sequences from your count file.
Removed 35 sequences from your taxonomy file.

Output File names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta
stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy


mothur > system(cp /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/stability_safe.files /mnt/d/software/analysis_SOP/test_Miseq_sop_webpage/test/stability.files)


mothur > dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, cutoff=0.03)

Using 8 processors.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist

It took 3 seconds to calculate the distances for 2228 sequences.

mothur > cluster(column=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table)

Using 8 processors.

You did not set a cutoff, using 0.03.

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist


iter	time	label	num_otus	cutoff	tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0.03	2228	0.03	0	2459717	0	21161	0	1	0	0.99147	0	0.99147	0	0	
1	0	0.03	494	0.03	17824	2458073	1644	3337	0.842304	0.999332	0.915554	0.998644	0.0844463	0.997992	0.877167	0.877403	
2	0	0.03	477	0.03	18335	2457964	1753	2826	0.866452	0.999287	0.912734	0.998852	0.087266	0.998154	0.888367	0.888991	
3	0	0.03	475	0.03	18336	2457970	1747	2825	0.8665	0.99929	0.913011	0.998852	0.086989	0.998157	0.888528	0.889148	
4	0	0.03	475	0.03	18336	2457970	1747	2825	0.8665	0.99929	0.913011	0.998852	0.086989	0.998157	0.888528	0.889148	


It took 0 seconds to cluster

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.steps
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.sensspec


mothur > cluster.split(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, taxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy, splitmethod=classify, taxlevel=4, cutoff=0.03)

Using 8 processors.
[NOTE]: Default clustering method has changed to opti. To use average neighbor, set method=average.
Splitting the file...
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist

It took 1 seconds to calculate the distances for 1216 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.1.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.1.dist

It took 0 seconds to calculate the distances for 3 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.2.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.2.dist

It took 0 seconds to calculate the distances for 53 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.3.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.3.dist

It took 1 seconds to calculate the distances for 780 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.4.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.4.dist

It took 0 seconds to calculate the distances for 36 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.5.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.5.dist

It took 0 seconds to calculate the distances for 36 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.6.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.6.dist

It took 1 seconds to calculate the distances for 14 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.7.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.7.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.7.dist

It took 0 seconds to calculate the distances for 2 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.8.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.8.dist

It took 0 seconds to calculate the distances for 6 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.9.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.9.dist

It took 0 seconds to calculate the distances for 10 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.10.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.10.dist

It took 0 seconds to calculate the distances for 22 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

It took 1 seconds to calculate the distances for 8 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.12.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.12.dist

It took 0 seconds to calculate the distances for 3 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.13.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.13.dist

It took 0 seconds to calculate the distances for 10 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.14.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.14.dist

It took 0 seconds to calculate the distances for 9 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.15.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.15.dist

It took 0 seconds to calculate the distances for 7 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.16.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.16.dist

It took 0 seconds to calculate the distances for 3 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.17.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.17.dist

It took 0 seconds to calculate the distances for 3 sequences.
/******************************************/
Running command: dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.18.temp, processors=8, cutoff=0.03)

Using 8 processors.
/******************************************/
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.18.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.18.dist

It took 0 seconds to calculate the distances for 2 sequences.
It took 34 seconds to split the distance file.
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.9.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
7	164	0	0	1	1	1	1	0	1	1	1	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.2.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
6	127	0	3	0.666667	1	1	0.976923	0	0.977941	0.80702	0.8	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.14.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
6	146	1	0	1	0.993197	0.857143	1	0.142857	0.993464	0.922666	0.923077	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.5.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.12.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	63	0	3	0	1	0	0.954545	0	0.954545	0	0	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.6.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.17.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	63	0	3	0	1	0	0.954545	0	0.954545	0	0	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.13.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.8.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	102	0	3	0	1	0	0.971429	0	0.971429	0	0	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.10.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.16.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.0.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.11.dist

Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.15.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	65	0	1	0	1	0	0.984848	0	0.984848	0	0	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.4.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	99	0	21	0	1	0	0.825	0	0.825	0	0	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.1.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
18	971	1	0	1	0.998971	0.947368	1	0.0526316	0.99899	0.972828	0.972973	


Clustering stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta.3.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
13103	294630	1129	2004	0.867346	0.996183	0.920672	0.993244	0.0793283	0.989922	0.888365	0.893214	


Cutoff was 0.03 changed cutoff to 0.03
It took 0 seconds to cluster
Merging the clustered files...
It took 0 seconds to merge.
/******************************************/
Running command: sens.spec(cutoff=0.03, list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.list, column=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table)

NOTE: sens.spec assumes that only unique sequences were used to generate the distance matrix.

It took 0 to run sens.spec.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.sensspec

/******************************************/
Done.


label	cutoff	tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0.03	0.03	18086	2458225	1741	2826	0.8649	0.9993	0.9122	0.9989	0.08781	0.9982	0.8873	0.8879

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.list
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.unique_list.sensspec


mothur > make.shared(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, label=0.03)
0.03

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.shared


mothur > classify.otu(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, taxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy, label=0.03)
0.03	475

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.0.03.cons.taxonomy
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.0.03.cons.tax.summary


mothur > phylotype(taxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy)
[WARNING]: This command can take a namefile and you did not provide one. The current namefile is stability.trim.contigs.good.names which seems to match stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy.
1
2
3
4
5
6

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.sabund
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.rabund
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.list


mothur > make.shared(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, label=1)
1

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.shared


mothur > classify.otu(list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.list, count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, taxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy, label=1)
1	63

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.1.cons.taxonomy
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.1.cons.tax.summary


mothur > dist.seqs(fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, output=lt, processors=8)

Using 8 processors.

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.phylip.dist

It took 3 seconds to calculate the distances for 2228 sequences.

mothur > clearcut(phylip=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.phylip.dist)

Output File Names: 
stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.phylip.tre


mothur > rename.file(taxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.0.03.cons.taxonomy, shared=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.shared)

Current files saved by mothur:
accnos=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.accnos
column=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist
fasta=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta
group=stability.contigs.good.groups
list=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.list
name=stability.trim.contigs.good.names
phylip=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.phylip.dist
qfile=stability.trim.contigs.qual
rabund=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.rabund
sabund=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.sabund
shared=stability.opti_mcc.shared
taxonomy=stability.taxonomy
constaxonomy=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.1.cons.taxonomy
contigsreport=stability.contigs.report
tree=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.phylip.tre
count=stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table
processors=8
summary=stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.summary

mothur > count.groups(shared=stability.opti_mcc.shared)
F3D0 contains 6201.
F3D1 contains 4653.
F3D141 contains 4650.
F3D142 contains 2418.
F3D143 contains 2392.
F3D144 contains 3445.
F3D145 contains 5536.
F3D146 contains 3832.
F3D147 contains 12441.
F3D148 contains 9453.
F3D149 contains 10024.
F3D150 contains 4118.
F3D2 contains 15694.
F3D3 contains 5197.
F3D5 contains 3460.
F3D6 contains 6394.
F3D7 contains 4057.
F3D8 contains 4245.
F3D9 contains 5735.

Total seqs: 113945.

Output File Names: 
stability.opti_mcc.count.summary


mothur > sub.sample(shared=stability.opti_mcc.shared, size=2392)
Sampling 2392 from each group.
0.03

Output File Names: 
stability.opti_mcc.0.03.subsample.shared


mothur > rarefaction.single(shared=stability.opti_mcc.shared, calc=sobs, freq=100)

Using 8 processors.

Processing group F3D0

0.03

Processing group F3D1

0.03

Processing group F3D141

0.03

Processing group F3D142

0.03

Processing group F3D143

0.03

Processing group F3D144

0.03

Processing group F3D145

0.03

Processing group F3D146

0.03

Processing group F3D147

0.03

Processing group F3D148

0.03

Processing group F3D149

0.03

Processing group F3D150

0.03

Processing group F3D2

0.03

Processing group F3D3

0.03

Processing group F3D5

0.03

Processing group F3D6

0.03

Processing group F3D7

0.03

Processing group F3D8

0.03

Processing group F3D9

0.03

Output File Names: 
stability.opti_mcc.groups.rarefaction


mothur > summary.single(shared=stability.opti_mcc.shared, calc=nseqs-coverage-sobs-invsimpson, subsample=2392)

Processing group F3D0

0.03

Processing group F3D1

0.03

Processing group F3D141

0.03

Processing group F3D142

0.03

Processing group F3D143

0.03

Processing group F3D144

0.03

Processing group F3D145

0.03

Processing group F3D146

0.03

Processing group F3D147

0.03

Processing group F3D148

0.03

Processing group F3D149

0.03

Processing group F3D150

0.03

Processing group F3D2

0.03

Processing group F3D3

0.03

Processing group F3D5

0.03

Processing group F3D6

0.03

Processing group F3D7

0.03

Processing group F3D8

0.03

Processing group F3D9

0.03

Output File Names: 
stability.opti_mcc.groups.ave-std.summary
stability.opti_mcc.groups.summary


mothur > heatmap.bin(shared=stability.opti_mcc.0.03.subsample.shared, scale=log2, numotu=50) 
0.03

Output File Names: 
stability.opti_mcc.0.03.subsample.0.03.heatmap.bin.svg


mothur > dist.shared(shared=stability.opti_mcc.shared, calc=thetayc-jclass, subsample=2392)

Using 8 processors.
0.03

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.dist
stability.opti_mcc.jclass.0.03.lt.dist
stability.opti_mcc.thetayc.0.03.lt.ave.dist
stability.opti_mcc.thetayc.0.03.lt.std.dist
stability.opti_mcc.jclass.0.03.lt.ave.dist
stability.opti_mcc.jclass.0.03.lt.std.dist


mothur > heatmap.sim(phylip=stability.opti_mcc.thetayc.0.03.lt.ave.dist)

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.ave.heatmap.sim.svg


mothur > heatmap.sim(phylip=stability.opti_mcc.jclass.0.03.lt.ave.dist)

Output File Names: 
stability.opti_mcc.jclass.0.03.lt.ave.heatmap.sim.svg


mothur > venn(shared=stability.opti_mcc.0.03.subsample.shared, groups=F3D0-F3D1-F3D2-F3D3)
0.03

Output File Names: 
stability.opti_mcc.0.03.subsample.0.03.sharedsobs.F3D0-F3D1-F3D2-F3D3.svg
stability.opti_mcc.0.03.subsample.0.03.sharedsobs.F3D0-F3D1-F3D2-F3D3.sharedotus


mothur > tree.shared(phylip=stability.opti_mcc.thetayc.0.03.lt.ave.dist)

Using 8 processors.
********************#****#****#****#****#****#****#****#****#****#****#
Reading matrix:     |||||||||||||||||||||||||||||||||||||||||||||||||||
***********************************************************************
Tree complete. 

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.ave.tre


mothur > parsimony(tree=stability.opti_mcc.thetayc.0.03.lt.ave.tre, group=mouse.time.design,  groups=all)

Using 8 processors.

Removing group: time because all sequences have been removed.
********************#****#****#****#****#****#****#****#****#****#****#
Comparing to random:|||||||||||||||||||||||||||||||||||||||||||||||||||
***********************************************************************
Tree#	Groups	ParsScore	ParsSig
1	Early-Late	1	0.001

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.ave.tre.parsimony
stability.opti_mcc.thetayc.0.03.lt.ave.tre.psummary


mothur > pcoa(phylip=stability.opti_mcc.thetayc.0.03.lt.ave.dist)

Processing...
Rsq 1 axis: 0.735482
Rsq 2 axis: 0.888965
Rsq 3 axis: 0.977938

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.ave.pcoa.axes
stability.opti_mcc.thetayc.0.03.lt.ave.pcoa.loadings


mothur > nmds(phylip=stability.opti_mcc.thetayc.0.03.lt.ave.dist)
Processing Dimension: 2
1
2
3
4
5
6
7
8
9
10

Number of dimensions:	2
Lowest stress :	0.113534
R-squared for configuration:	0.948004

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.ave.nmds.iters
stability.opti_mcc.thetayc.0.03.lt.ave.nmds.stress
stability.opti_mcc.thetayc.0.03.lt.ave.nmds.axes


mothur > nmds(phylip=stability.opti_mcc.thetayc.0.03.lt.ave.dist, mindim=3, maxdim=3)
Processing Dimension: 3
1
2
3
4
5
6
7
8
9
10

Number of dimensions:	3
Lowest stress :	0.0461758
R-squared for configuration:	0.989835

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.ave.nmds.iters
stability.opti_mcc.thetayc.0.03.lt.ave.nmds.stress
stability.opti_mcc.thetayc.0.03.lt.ave.nmds.axes


mothur > amova(phylip=stability.opti_mcc.thetayc.0.03.lt.ave.dist, design=mouse.time.design)
Early-Late	Among	Within	Total
SS	0.626747	0.552553	1.1793
df	1	17	18
MS	0.626747	0.0325031

Fs:	19.2827
p-value: <0.001*

Experiment-wise error rate: 0.05
If you have borderline P-values, you should try increasing the number of iterations

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.ave.amova


mothur > homova(phylip=stability.opti_mcc.thetayc.0.03.lt.ave.dist, design=mouse.time.design)
HOMOVA	BValue	P-value	SSwithin/(Ni-1)_values
Early-Late	7.84318	<0.001*	0.0607342	0.00740876
Experiment-wise error rate: 0.05
If you have borderline P-values, you should try increasing the number of iterations

Output File Names: 
stability.opti_mcc.thetayc.0.03.lt.ave.homova


mothur > corr.axes(axes=stability.opti_mcc.thetayc.0.03.lt.ave.pcoa.axes, shared=stability.opti_mcc.0.03.subsample.shared, method=spearman, numaxes=3)
You did not provide a label, I will use the first label in your inputfile.

Output File Names: 
stability.opti_mcc.0.03.subsample.spearman.corr.axes


mothur > corr.axes(axes=stability.opti_mcc.thetayc.0.03.lt.ave.pcoa.axes, metadata=mouse.dpw.metadata, method=spearman, numaxes=3)
You did not provide a label, I will use the first label in your inputfile.

Output File Names: 
mouse.dpw.spearman.corr.axes


mothur > get.communitytype(shared=stability.opti_mcc.0.03.subsample.shared)
Using 1 processor
0.03
K	NLE		logDet	BIC		AIC		Laplace
1	10706.4	587.174	11236.4	11066.4	10669.22	10791	489.349	11852.4	11512	10373.13	11616.5	191.707	13209.4	12698.5	10718.14	12366.4	14.9027	14490.8	13809.4	11047.85	13233.1	-364.842	15889	15037.1	11392.9
Output File Names: 
stability.opti_mcc.0.03.subsample.0.03.dmm.mix.fit
stability.opti_mcc.0.03.subsample.0.03.dmm.1.mix.posterior
stability.opti_mcc.0.03.subsample.0.03.dmm.1.mix.relabund
stability.opti_mcc.0.03.subsample.0.03.dmm.2.mix.posterior
stability.opti_mcc.0.03.subsample.0.03.dmm.2.mix.relabund
stability.opti_mcc.0.03.subsample.0.03.dmm.3.mix.posterior
stability.opti_mcc.0.03.subsample.0.03.dmm.3.mix.relabund
stability.opti_mcc.0.03.subsample.0.03.dmm.4.mix.posterior
stability.opti_mcc.0.03.subsample.0.03.dmm.4.mix.relabund
stability.opti_mcc.0.03.subsample.0.03.dmm.5.mix.posterior
stability.opti_mcc.0.03.subsample.0.03.dmm.5.mix.relabund
stability.opti_mcc.0.03.subsample.0.03.dmm.mix.design
stability.opti_mcc.0.03.subsample.0.03.dmm.mix.parameters
stability.opti_mcc.0.03.subsample.0.03.dmm.mix.summary


mothur > metastats(shared=stability.opti_mcc.0.03.subsample.shared, design=mouse.time.design)

Using 8 processors.
0.03
Comparing Late and Early...




Output File Names: 
stability.opti_mcc.0.03.subsample.0.03.Late_Early.metastats


mothur > lefse(shared=stability.opti_mcc.0.03.subsample.shared, design=mouse.time.design)

You did not provide a class, using time.

0.03

Number of significantly discriminative features: 78 ( 81 ) before internal wilcoxon.
Number of discriminative features with abs LDA score > 2 : 78.

Output File Names: 
stability.opti_mcc.0.03.subsample.0.03.lefse_summary


mothur > phylo.diversity(tree=stability.tre, count=stability.count_table, rarefy=T)
Unable to open stability.tre. Trying default /mnt/d/software/mothur/mothur/stability.tre
Unable to open /mnt/d/software/mothur/mothur/stability.tre. Trying mothur's location /mnt/d/software/mothur/mothurstability.tre
Unable to open /mnt/d/software/mothur/mothurstability.tre
Unable to open stability.count_table. Trying default /mnt/d/software/mothur/mothur/stability.count_table
Unable to open /mnt/d/software/mothur/mothur/stability.count_table. Trying mothur's location /mnt/d/software/mothur/mothurstability.count_table
Unable to open /mnt/d/software/mothur/mothurstability.count_table

Using 8 processors.
[ERROR]: did not complete phylo.diversity.

mothur > unifrac.unweighted(tree=stability.tre, count=stability.count_table, distance=lt, processors=2, random=F, subsample=2392)
Unable to open stability.tre. Trying default /mnt/d/software/mothur/mothur/stability.tre
Unable to open /mnt/d/software/mothur/mothur/stability.tre. Trying mothur's location /mnt/d/software/mothur/mothurstability.tre
Unable to open /mnt/d/software/mothur/mothurstability.tre
Unable to open stability.count_table. Trying default /mnt/d/software/mothur/mothur/stability.count_table
Unable to open /mnt/d/software/mothur/mothur/stability.count_table. Trying mothur's location /mnt/d/software/mothur/mothurstability.count_table
Unable to open /mnt/d/software/mothur/mothurstability.count_table

Using 2 processors.
[ERROR]: if subsample=t, a group file must be provided.
[ERROR]: did not complete unifrac.unweighted.

mothur > unifrac.weighted(tree=stability.tre, count=stability.count_table, distance=lt, processors=2, random=F, subsample=2392)
Unable to open stability.tre. Trying default /mnt/d/software/mothur/mothur/stability.tre
Unable to open /mnt/d/software/mothur/mothur/stability.tre. Trying mothur's location /mnt/d/software/mothur/mothurstability.tre
Unable to open /mnt/d/software/mothur/mothurstability.tre
Unable to open stability.count_table. Trying default /mnt/d/software/mothur/mothur/stability.count_table
Unable to open /mnt/d/software/mothur/mothur/stability.count_table. Trying mothur's location /mnt/d/software/mothur/mothurstability.count_table
Unable to open /mnt/d/software/mothur/mothurstability.count_table

Using 2 processors.
[ERROR]: if subsample=t, a group file must be provided.
[ERROR]: did not complete unifrac.weighted.

mothur > quit()


************************************************************
************************************************************
************************************************************
Detected 5 [ERROR] messages, please review.
************************************************************
************************************************************
************************************************************


<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Detected 4 [WARNING] messages, please review.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
